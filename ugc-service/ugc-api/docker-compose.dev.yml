version: '3.5'
services:
  zookeeper_kafka:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper_kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      driver: "none"

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    expose:
      - 9092
      - 29092
    depends_on:
      - zookeeper_kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper_kafka:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 20
    logging:
      driver: "none"

  kafka-setup:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      broker:
        condition: service_healthy
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       kafka-topics --create --bootstrap-server broker:9092 --partitions 4 --topic movies' "

  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    hostname: zookeeper
    logging:
      driver: "none"

  clickhouse-node1:
    container_name: clickhouse-node1
    build:
      context: .
      dockerfile: ./click_house_config/Dockerfile.cl1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
    expose:
      - 9009
      - 9000
    volumes:
      - ./click_house_config/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper 
      - kafka-setup
    logging:
      driver: "none"

  clickhouse-node2:
    image: yandex/clickhouse-server
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    expose:
      - 9009
    volumes:
      - ./click_house_config/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper
      - kafka-setup
    logging:
      driver: "none"

  clickhouse-node3:
    build:
      context: .
      dockerfile: ./click_house_config/Dockerfile.cl3
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    expose:
      - 9009
      - 9000
    volumes:
      - ./click_house_config/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper
      - kafka-setup
    logging:
      driver: "none"

  clickhouse-node4:
    image: yandex/clickhouse-server
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    expose:
      - 9009
    volumes:
      - ./click_house_config/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper
      - kafka-setup
    logging:
      driver: "none"

  redis_film_watch:
    image: redis:6.2.6
    container_name: redis_film_watch
    expose:
      - 6379
    logging:
      driver: "none"

  film_watch:
    container_name: film_watch
    hostname: film_watch
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - code_api_film_watch:/code
    env_file:
      - .env
    entrypoint: 
      - entrypoint_fastapi.sh
    ports:
      - 8000:8000
    depends_on:
      - redis_film_watch
      - kafka-setup

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - "27017:27017"
    expose:
      - "27017"


  film_watch_test:
    container_name: film_watch_test
    build:
      context: .
      dockerfile: ./Dockerfile.test
    volumes:
      - code_api_test:/code
    entrypoint: 
      - entrypoint_tests.sh
    depends_on:
      - film_watch




  nginx:
    image: nginx:1.19.2
    volumes:
      - ./deploy/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./deploy/logs/nginx/:/var/log/nginx/
    depends_on:
      - film_watch
    ports:
      - 8080:80

  logstash:
    image: logstash:7.17.5
    environment:
      ES_HOST: "elasticsearch:9200"
    ports:
      - "5044:5044/udp"
    volumes:
      - ./deploy/logstash.conf:/config/logstash.conf:ro
      - ./deploy/logs/nginx/:/var/log/nginx/:ro
    command: logstash -f /config/logstash.conf

  elasticsearch:
    image: elasticsearch:7.17.1
    environment:
      discovery.type: single-node
    ports:
      - 9200:9200

  kibana:
    image: kibana:7.17.5
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: elastic/filebeat:7.3.2
    volumes:
      - ./deploy/logs/nginx:/var/log/nginx:ro
      - ./deploy/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - film_watch
      - nginx
      - logstash
      - elasticsearch
      - kibana
    links:
      - logstash


volumes:
  code_api_film_watch:
  code_api_test:

networks:
  default:
    external:
      name: netflix_nw
